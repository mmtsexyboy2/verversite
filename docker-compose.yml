version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001" # Host:Container
    volumes:
      - ./backend:/usr/src/app # Mount host src folder for development
      - /usr/src/app/node_modules # Don't mount node_modules from host
    environment:
      - NODE_ENV=development # Or production, depending on needs
      - DATABASE_URL=postgres://myuser:mypassword@db:5432/mydatabase
      # Add other backend environment variables here (e.g., GOOGLE_CLIENT_ID, GOOGLE_CLIENT_SECRET, JWT_SECRET)
      # Example:
      # - GOOGLE_CLIENT_ID=your_google_client_id
      # - GOOGLE_CLIENT_SECRET=your_google_client_secret
      # - JWT_SECRET=your_jwt_secret
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000" # Host:Container
    volumes:
      - ./frontend:/usr/src/app # Mount host src folder for development
      - /usr/src/app/node_modules # Don't mount node_modules from host
      - /usr/src/app/.next # Don't mount .next from host in development (usually better for HMR)
    environment:
      - NODE_ENV=development
      # The backend URL needs to be accessible from the frontend container.
      # During client-side rendering, it would be http://localhost:3001 or similar if accessing host directly.
      # For server-side rendering or API routes in Next.js, it would be http://backend:3001
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:3001/api # For client-side calls from browser
      - INTERNAL_BACKEND_URL=http://backend:3001 # For server-side calls from Next.js server
    depends_on:
      - backend
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432" # Host:Container (Careful with exposing DB directly in production)
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist data
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=mydatabase
    networks:
      - app-network

volumes:
  postgres_data: # Defines the named volume for data persistence

networks:
  app-network:
    driver: bridge
